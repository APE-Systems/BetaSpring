// var Session = require('../models').Sessions
//   , Coach = require('../models').Coaches
//   , Athlete = require('../models').Athletes
//   , secure = require('../security').secureMe
//   , user, school;
// authenticate
function findUser(e,t,n){console.info("+  identify user");Coach.findOne({username:t},function(r,i){if(r){console.error("\n----ERROR----");console.error("coach query(username):\n"+r);console.error("-------------");return e.redirect("/internal_error/fun.findUser/"+r.code+"/")}if(!i){console.info("    user not a registered coach");console.info("    redirecting to login");return e.render("login",{username:t})}user=i;return n(i)})}module.exports.authenticate=function(e,t,n){function r(r){var i=r.password.split(",")[1],s=e.body.password;secure.authenticate(r.password,s,i,function(e,i){if(i){console.log("  authentication: success");console.log("  authentication name:",r.fullname+"\n");school=r.school.replace(/\s/g,"");return n()}console.log("  authentication: fail");console.log("    password: fail\n");return t.render("login",{username:r.username})})}console.info("--------------");console.info("authentication");console.info("--------------");findUser(t,e.body.username,r)};module.exports.checkCookie=function(e,t,n){console.info("\n\r---------------------");console.info("validate signedCookie");console.info("---------------------");if(e.signedCookies[".APEAUTH"]){console.info("  signedCookie validation: success");return n()}console.info("  signedCookie validation: fail");console.info("  redirect to /login\n");t.render("login",{username:e.body.username||""})};module.exports.checkSession=function(e,t,n){console.info("\n\r---------------------");console.info("check session");console.info("---------------------");signedIn=e.signedCookies[".APEAUTH"];Session.findOne({cookie:signedIn},function(r,i){if(r){console.error("\n----ERROR----");console.error("session query(cookie):\n"+r);console.error("-------------");return t.redirect("/internal_error/mid.checkSession/"+r.code+"/")}if(i){console.info("  session: success");e.session=i;findUser(t,i.username,function(t){console.log("  User Session:",t.fullname);e.user={username:t.username,fullname:t.fullname.split(" ")[0]||"coach",teams:t.teams,school:t.school.replace(/\s/g,"")};return n()})}else{console.info("  session: fail");console.info("  redirect: /login");t.clearCookie(".APEAUTH");t.redirect("/login")}})};module.exports.redirect=function(e,t){school=e.user.school.replace(/\s/g,"");console.log("/"+school+"/dashboard");return t.redirect("/"+school+"/dashboard")};module.exports.setSession=function(e,t){function n(){console.log("going to userDashboard");e.fullname=user.fullname;e.school=user.school.replace(/\s/g,"");e.teams=user.teams;console.info("\nlogin dateTime: "+new Date);console.info("redirect:   /"+school+"/dashboard");return t.redirect("/"+school+"/dashboard")}function r(e,r){function i(e,n){console.info("evalute session");Session.findOne({username:e},function(e,r){if(e){console.error("\n----ERROR----");console.error("session query(username):\n"+e);console.error("-------------");return t.redirect("/internal_error/user.setSession/"+e.code+"/")}return n(r)})}function s(e){var t=new Session({username:e.username});secure.makeSecureVal(t,o)}function o(e,r){e.cookie=r;e.save(function(r){if(r){console.error("\n----ERROR----");console.error("session save(session):\n"+r);console.error("-------------");return t.redirect("/internal_error/user.saveSession/"+r.code+"/")}console.info("  session saved");console.info("  set session cookie");t.cookie(".APEAUTH",e.cookie,{signed:!0,path:"/",httpOnly:!0});return n()})}function u(e,n){console.info("  removing session");Session.findOneAndRemove({username:e.username},function(r,i){if(r){console.error("\n----ERROR----");console.error("session findOneAndRemove(username):\n"+r);console.error("-------------");return t.redirect("/internal_error/user.setSession/"+r.code+"/")}console.log("  session removed");return n(e)})}i(e.username,function(t){if(t){console.info("  session exists");u(t,s)}else{console.info("  session nonexistant");console.info("  creating new session");s(e)}})}console.info("--------------");console.info("User Authenticated -> setSession");console.info("--------------");r(user,n)};module.exports.validate=function(e,t,n){console.info("\n--------------");console.info("validate login");console.info("--------------");e.assert("req.body.username","Username is required").notNull();e.assert("req.body.username","Username must be an email").isEmail();e.assert("req.body.password","Password is required").notNull();e.assert("req.body.password","Password must be at least 8 characters").len(8);var r=e.validationErrors();if(r){r.forEach(function(e,t,n){console.error("login Errors:");console.error("param:",e.param);console.error("msg:",e.msg);console.error("input value:",e.value)});console.log("  validate login: fail\n");return t.render("login",{username:e.body.username||""})}console.info("  validate login: success");console.info("  dateTime: "+new Date+"\n");return n()};