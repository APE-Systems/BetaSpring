function alphaSort(e,t){return e<t?-1:e>t?1:0}function dtSort(e,t){return e.dt<t.dt?1:e.dt>t.dt?-1:0}function getModelMetrics(e,t,n,r,i){n=n||{};r=r||{};r instanceof Array&&(r=r.join(" "));e[t].find(n,r,function(e,t){if(e)throw e;return i(t)})}function getAllAthletes(e,t,n){t=t||{};t instanceof Array&&(t=t.join(" "));Athlete.find({teams:{$in:[e]}},t,function(e,t){if(e)throw e;console.log("  number of athletes",t.length+"\n");return n(t)})}var Athlete=require("../models").Athletes;module.exports.index=function(e,t){console.info("\n\r---------------------");console.info("Training Index");console.info("API: /teams/"+e.params.team+"/metrics/latest");console.info("Model: "+e.query.category);console.info("Metric: "+e.query.metric);console.info("---------------------");var n=e.params.team,r=e.query.category,i=e.query.metric,s=e.models;getAllAthletes(n,"id",function(e){var n=[];for(var o in e)n.push(e[o]._id);var u="AID "+i;getModelMetrics(s,r,{AID:{$in:n}},u,function(e){var n={};for(var r in e){var s=e[r],o=s.AID,u=s[i];if(u.length>0){var a=s[i].sort(dtSort)[0].val;a=a.replace(/[ a-zA-Z\*\(\)]/g,"");n[o]=a!==""?a:"--"}else n[o]="--"}t.json(200,{metrics:n})})})};