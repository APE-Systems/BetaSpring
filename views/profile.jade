include includes/head
body.profile
  include includes/nav
  include includes/athleteNameDate
  .row.athlete
    .small-2.large-2.columns.athleteProfile
      img.aPhoto(id= athletes[0]._id , src='/_imgs/#{school}/#{athletes[0].fullname.split(' ')[1]}' + '_' + '#{athletes[0].fullname.split(' ')[0]}.jpeg')
      a.vProfile(href="/#{school}/rosters/", role='button') View Team
      h4 Position
      p.position #{athletes[0].position}
      h4 Group
      p.group #{athletes[0].group}
      h4 Year
      p.year #{athletes[0].year}
    .small-10.large-10.columns.athleteMetrics
      .section-container.tabs(data-section='tabs')
        each item, ind in Metrics
          each package, model in item
            section(class='#{model}')
                p.title(data-section-title='data-section-title')
                  a(href='Panel#{model}', onclick='') #{model}
                .content(data-section-content='data-section-content')
                  .row.statRow
                    for val, key in package
                      //- li #{val} #{key}
                      if key != 'deltas' && key != 'averages'
                        .small-3.large-3.columns.panel
                          p(class='#{key}')= labels[key]
                          h2 #{val}
                        .small-3.large-3.columns.panel.dark
                          p Team Avg.
                          h2= package.averages[key]
                        .small-3.large-3.columns.panel
                          p Delta (since last test)
                          if package.deltas[key] < 0
                            h2.negMetric= package.deltas[key]
                          else
                            h2.posMetric= package.deltas[key]
                        .small-3.large-3.columns.panel.dark.graphIcon.clickable
                          p View Graph
                          a.graphLaunch(href='#', data-metric="#{model}", data-reveal-id='#{key}')
  include includes/footer
  include includes/chart
