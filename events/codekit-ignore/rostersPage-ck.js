<<<<<<< HEAD
"use strict";var rospgOps=require("../operations").RostersPageOps,rostersPageEvts={getRostersPage:function(e,t,n){console.log("Event: getRostersPage");rospgOps.getRostersPage(e,function(n,r){if(n)throw new Error(n);t.render("rostersPage",{nav:e.school,athletes:r.athletes,apeLib:r.apeLibPackage})})},createAthlete:function(e,t,n){console.log("Event: createAthlete");rospgOps.createAthlete(e,function(e,n){if(e){console.error("createAthlete: Error\n",e);t.send(500,"Problem saving athlete")}else{console.log("createAthlete: Success");t.send(200)}})},updateAthlete:function(e,t,n){console.log("Event: updateTeam");rospgOps.updateTeam(e,function(e){if(e){console.error("updateTeam: Error:\n",e);t.send(500,"Problem updating team")}else{console.log("updateTeam: Success");t.send(200)}})},deleteAthlete:function(e,t,n){console.log("Event: deleteTeam");rospgOps.deleteTeam(e,function(e){if(e){console.error("deleteTeam: Error:\n",e);t.send(500,"Problem deleteing team")}else{console.log("deleteTeam: Success");t.send(200)}})},createGroup:function(e,t,n){console.log("Event: createGroup");rospgOps.createGroup(e,function(e,n){if(e)if(e.code===422){console.error("Invalid Group name\n",e);t.json(200,{error:e})}else if(e.code===11e3){console.error("duplicate key\n",e);t.json(200,{error:{msg:"Group name already in database",err:e}})}else{console.error("createGroup: Error\n",e);t.json(200,{error:{msg:"Problem saving group",err:e}})}else{console.log("createGroup: Success\n");t.json(200,{id:n._id,name:n.name})}})},updateGroup:function(e,t,n){console.log("Event: updateGroup");rospgOps.updateGroup(e,function(e,n){if(e)if(e.code===422){console.error("Invalid Group name\n",e);t.json(200,{error:e})}else if(e.code===11e3){console.error("duplicate key\n",e);t.json(200,{error:{msg:"Group name already in database",err:e}})}else{console.error("updateGroup: Error\n",e);t.json(200,{error:{msg:"Problem saving group",err:e}})}else{console.log("createGroup: Success\n");t.json(200,{id:n._id,name:n.name})}})},deleteGroup:function(e,t,n){console.log("Event: deleteGroup");rospgOps.deleteGroup(e,function(e,n){if(e)if(e.code===422){console.error("Invalid Group name\n",e);t.json(200,{error:e})}else{console.error("deleteGroup: Error\n",e);t.json(200,{error:{msg:"Problem deleting group",err:e}})}else{console.log("deleteGroup: Success\n");t.json(200,{id:n._id,name:n.name})}})}};module.exports=exports=rostersPageEvts;
=======
"use strict";var rospgOps=require("../operations").RostersPageOps,rostersPageEvts={getRostersPage:function(e,t,n){console.log("Event: getRostersPage");rospgOps.getRostersPage(e,function(n,r){if(n)throw new Error(n);t.render("rostersPage",{nav:e.school,athletes:r.athletes,apeLib:r.apeLibPackage})})},createAthlete:function(e,t,n){console.log("Event: createAthlete");rospgOps.createAthlete(e,function(e,n){if(e)if(e.code===422){console.error("Invalid Athlete info\n",e);t.json(200,{error:e})}else if(e.code===11e3){console.error("duplicate key\n",e);t.json(200,{error:{msg:"Athlete already in database",err:e}})}else{console.error("createAthlete: Error\n",e);t.json(200,{error:{msg:"Problem saving athlete",err:e}})}else{console.log("createAthlete: Success\n");t.json(200,{id:n._id,name:n.name})}})},updateAthlete:function(e,t,n){console.log("Event: updateAthlete");rospgOps.updateAthlete(e,function(e,n){if(e)if(e.code===422){console.error("Invalid Athlete info\n",e);t.json(200,{error:e})}else if(e.code===11e3){console.error("duplicate key\n",e);t.json(200,{error:{msg:"Athlete already in database",err:e}})}else{console.error("createAthlete: Error\n",e);t.json(200,{error:{msg:"Problem updating athlete",err:e}})}else{console.log("updateAthlete: Success\n");t.json(200,{id:n._id,name:n.fname+" "+n.lname})}})},deleteAthlete:function(e,t,n){console.log("Event: deleteTeam");rospgOps.deleteTeam(e,function(e){if(e){console.error("deleteTeam: Error:\n",e);t.send(500,"Problem deleteing team")}else{console.log("deleteTeam: Success");t.send(200)}})},createGroup:function(e,t,n){console.log("Event: createGroup");rospgOps.createGroup(e,function(e,n){if(e)if(e.code===422){console.error("Invalid Group name\n",e);t.json(200,{error:e})}else if(e.code===11e3){console.error("duplicate key\n",e);t.json(200,{error:{msg:"Group name already in database",err:e}})}else{console.error("createGroup: Error\n",e);t.json(200,{error:{msg:"Problem saving group",err:e}})}else{console.log("createGroup: Success\n");t.json(200,{id:n._id,name:n.name})}})},updateGroup:function(e,t,n){console.log("Event: updateGroup");rospgOps.updateGroup(e,function(e,n){if(e)if(e.code===422){console.error("Invalid Group name\n",e);t.json(200,{error:e})}else if(e.code===11e3){console.error("duplicate key\n",e);t.json(200,{error:{msg:"Group name already in database",err:e}})}else{console.error("updateGroup: Error\n",e);t.json(200,{error:{msg:"Problem saving group",err:e}})}else{console.log("createGroup: Success\n");t.json(200,{id:n._id,name:n.name})}})},deleteGroup:function(e,t,n){console.log("Event: deleteGroup");rospgOps.deleteGroup(e,function(e,n){if(e)if(e.code===422){console.error("Invalid Group name\n",e);t.json(200,{error:e})}else{console.error("deleteGroup: Error\n",e);t.json(200,{error:{msg:"Problem deleting group",err:e}})}else{console.log("deleteGroup: Success\n");t.json(200,{id:n._id,name:n.name})}})}};module.exports=exports=rostersPageEvts;
>>>>>>> cc1bdc043bc2441cb153f81fe90b520fba255ddd
